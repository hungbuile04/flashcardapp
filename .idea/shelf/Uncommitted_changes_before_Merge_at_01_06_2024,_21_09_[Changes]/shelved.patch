Index: src/main/java/project/flashcardapp/Controller/LearningMode/ReviewModeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package project.flashcardapp.Controller.LearningMode;\n\nimport javafx.animation.*;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.fxml.Initializable;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.control.Label;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.layout.StackPane;\nimport javafx.stage.Stage;\nimport javafx.util.Duration;\nimport project.flashcardapp.Controller.DeckInfoController;\nimport project.flashcardapp.Model.Deck;\nimport project.flashcardapp.Model.Selector;\n\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.Optional;\nimport java.util.ResourceBundle;\n\n//Chức năng ôn tập\npublic class ReviewModeController implements Initializable {\n    @FXML\n    private Label questionLabel;\n    @FXML\n    private Label answerLabel;\n    @FXML\n    private Button backButton;\n\n    private static int currentIndex = 0;\n    private boolean showingQuestion = true;\n    private Deck deck;\n    public void setDeck(Deck deck) {\n        this.deck = deck;\n    }\n\n    @FXML\n    private StackPane CardPane;\n\n    private void updateCard() {\n        if (deck.getCards().getSize() == 0) {\n            System.out.println(\"Card list is empty!\");\n            return;\n        }\n\n        questionLabel.setText(deck.getCards().getCard(currentIndex).getQuestion());\n        answerLabel.setText(deck.getCards().getCard(currentIndex).getAnswer());\n        showingQuestion = true;\n        questionLabel.setVisible(true);\n        answerLabel.setVisible(false);\n    }\n\n    @Override\n    public void initialize(URL url, ResourceBundle resourceBundle) {\n        this.deck = DeckInfoController.deck;\n        updateCard();\n    }\n\n    @FXML\n    void showNextCard(MouseEvent event) {\n        if (currentIndex < deck.getCards().getSize() - 1) {\n            currentIndex++;\n            updateCard();\n        }\n    }\n\n    @FXML\n    void showPreviousCard(MouseEvent event) {\n        if (currentIndex > 0) {\n            currentIndex--;\n            updateCard();\n        }\n    }\n\n    @FXML\n    private void flipCard() {\n        Timeline timeline = new Timeline();\n\n        // Nửa đầu của lật: quay tới 90 độ\n//        KeyFrame kf1 = new KeyFrame(Duration.seconds(0.25),\n//                new KeyValue(CardPane.rotateProperty(), 90));\n\n        // Tạo một khoảng dừng để thay đổi nội dung thẻ\n        PauseTransition pause = new PauseTransition(Duration.seconds(0.1));\n        pause.setOnFinished(event -> {\n            if (showingQuestion) {\n                questionLabel.setVisible(false);\n                answerLabel.setVisible(true);\n                showingQuestion = false;\n            } else {\n                questionLabel.setVisible(true);\n                answerLabel.setVisible(false);\n                showingQuestion = true;\n            }\n        });\n        // Nửa sau của lật: quay từ 90 đến 180 độ\n//        KeyFrame kf2 = new KeyFrame(Duration.seconds(0.5),\n//                new KeyValue(CardPane.rotateProperty(), 180));\n//\n//        timeline.getKeyFrames().addAll(kf1, kf2);\n//\n//        timeline.setOnFinished(event -> {\n//            CardPane.setRotate(0);\n//            showingQuestion = !showingQuestion;\n//        });\n        timeline.play();\n        pause.playFromStart();\n    }\n\n    @FXML\n    void isEasy(MouseEvent event) throws IOException {\n        deck.getCards().getCard(currentIndex).getSelector().update(Selector.AnswerType.CORRECT,deck.getEasyCard(), deck.getMediumCard(), deck.getHardCard());\n        if (currentIndex < deck.getCards().getSize() - 1) {\n            currentIndex++;\n            updateCard();\n        }\n        if(currentIndex == deck.getCards().getSize() - 1){\n            goToResult();\n            currentIndex = 0;\n        }\n    }\n\n    @FXML\n    void isHard(MouseEvent event) throws IOException {\n        deck.getCards().getCard(currentIndex).getSelector().update(Selector.AnswerType.FAILURE,deck.getEasyCard(), deck.getMediumCard(), deck.getHardCard());\n        if (currentIndex < deck.getCards().getSize() - 1) {\n            currentIndex++;\n            updateCard();\n        }\n        if(currentIndex == deck.getCards().getSize() - 1){\n            goToResult();\n            currentIndex = 0;\n        }\n    }\n\n    @FXML\n    void isMedium(MouseEvent event) throws IOException {\n        deck.getCards().getCard(currentIndex).getSelector().update(Selector.AnswerType.MEDIUM,deck.getEasyCard(), deck.getMediumCard(), deck.getHardCard());\n        if (currentIndex < deck.getCards().getSize() - 1) {\n            currentIndex++;\n            updateCard();\n        }\n        if(currentIndex == deck.getCards().getSize() - 1){\n            goToResult();\n            currentIndex = 0;\n        }\n    }\n\n    public void backToDeckInfoWindow(MouseEvent mouseEvent) throws Exception {\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\n        alert.setTitle(\"Confirm Cancel\");\n        alert.setHeaderText(\"Do you want to stop reviewing?\");\n        alert.setContentText(\"Click OK to confirm, or Cancel to continue.\");\n\n        Optional<ButtonType> result = alert.showAndWait();\n        if (result.isPresent() && result.get() == ButtonType.OK) {\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/project/flashcardapp/deckinfo.fxml\"));\n            Parent detailSceneRoot = loader.load();\n            Scene detailScene = new Scene(detailSceneRoot);\n            Stage stage = (Stage)CardPane.getScene().getWindow();\n            stage.setResizable(false);\n            stage.setTitle(deck.getDeckName());\n            stage.setScene(detailScene);\n            stage.show();\n        }\n    }\n\n    void goToResult() throws IOException {\n        Stage stage = (Stage) answerLabel.getScene().getWindow();\n        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"/project/flashcardapp/result_review_mode.fxml\"));\n        Scene scene = new Scene(fxmlLoader.load());\n        stage.setScene(scene);\n        stage.show();\n    }\n\n}\n\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/project/flashcardapp/Controller/LearningMode/ReviewModeController.java b/src/main/java/project/flashcardapp/Controller/LearningMode/ReviewModeController.java
--- a/src/main/java/project/flashcardapp/Controller/LearningMode/ReviewModeController.java	(revision ca8988938396782bd82f0001e5468f3517f6df19)
+++ b/src/main/java/project/flashcardapp/Controller/LearningMode/ReviewModeController.java	(date 1717250947225)
@@ -152,6 +152,7 @@
     }
 
     public void backToDeckInfoWindow(MouseEvent mouseEvent) throws Exception {
+        deck.store();
         Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
         alert.setTitle("Confirm Cancel");
         alert.setHeaderText("Do you want to stop reviewing?");
Index: src/main/resources/project/flashcardapp/stylesheet/deck_info.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.label {\n    -fx-font-family: \"DVN-Poppins ExtBd\";\n    -fx-font-size: 13px;\n}\n\n.button {\n    -fx-font-family: \"DVN-Poppins ExtBd\";\n    -fx-background-radius: 10px;\n    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.25), 7, 0.1, 0.1, 0)\n}\n\n#paneInfo {\n    -fx-border-color: #158C62;\n    -fx-border-radius: 10px;\n    -fx-border-width: 3px;\n}\n\n#totalCardLabel, #learnLabel, #dueLabel {\n    -fx-font-family: \"DVN-Poppins\";\n}\n\n#deckName {\n    -fx-font-family: \"DVN-Poppins ExtBd\";\n    -fx-font-size: 18px;\n    -fx-alignment: center;\n    -fx-text-fill: #44BC91;\n}\n\n#testModeButton {\n    -fx-background-color: #77DEB9;\n    -fx-text-fill: white;\n}\n\n#reviewModeBtn {\n    -fx-background-color: #B7B7B7;\n    -fx-text-fill: white;\n}\n\n#backBtn {\n    -fx-graphic: url(resource/arrowBack.png);\n    -fx-background-color: transparent;\n    -fx-scale-x: 0.5;\n    -fx-scale-y: 0.5\n}\n\n#customizeBtn, #deleteDeckBtn {\n    -fx-background-color: transparent;\n    -fx-underline: true;\n    -fx-effect: false;\n    -fx-font-size: 12px;\n}\n\n#deleteDeckBtn {\n    -fx-text-fill: #AB3434;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/project/flashcardapp/stylesheet/deck_info.css b/src/main/resources/project/flashcardapp/stylesheet/deck_info.css
--- a/src/main/resources/project/flashcardapp/stylesheet/deck_info.css	(revision ca8988938396782bd82f0001e5468f3517f6df19)
+++ b/src/main/resources/project/flashcardapp/stylesheet/deck_info.css	(date 1717250947226)
@@ -46,7 +46,7 @@
 #customizeBtn, #deleteDeckBtn {
     -fx-background-color: transparent;
     -fx-underline: true;
-    -fx-effect: false;
+    -fx-effect:false;
     -fx-font-size: 12px;
 }
 
Index: src/main/java/project/flashcardapp/Controller/LearningMode/TestModeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package project.flashcardapp.Controller.LearningMode;\n\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.fxml.Initializable;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.*;\nimport javafx.scene.input.MouseEvent;\nimport javafx.stage.Stage;\nimport project.flashcardapp.Controller.DeckInfoController;\nimport project.flashcardapp.Model.Deck;\n\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.Optional;\nimport java.util.ResourceBundle;\n\n//Chức năng kiểm tra\npublic class  TestModeController implements Initializable {\n    private int currentIndex = 0;\n    private Deck deck;\n    public void setDeck(Deck deck) {\n        this.deck = deck;\n    }\n\n    @FXML\n    private TextField answerField;\n\n    @FXML\n    private Button nextCard;\n\n    @FXML\n    private Button previousCard;\n\n    @FXML\n    private Label questionLabel;\n\n    @FXML\n    private Label resultAlert;\n\n    @FXML\n    private Label showAnswer;\n\n    @FXML\n    private Button checkButton;\n\n    @FXML\n    private Button showAnswerButton;\n\n    @Override\n    public void initialize(URL url, ResourceBundle resourceBundle) {\n        this.deck = DeckInfoController.deck;\n        deck.randomCard(deck.getCards());\n       updateCard();\n    }\n\n    private void updateCard() {\n        if (deck.getCards().getSize() == 0) {\n            System.out.println(\"Card list is empty!\");\n            return;\n        }\n\n        questionLabel.setText(deck.getCards().getCard(currentIndex).getQuestion());\n        questionLabel.setVisible(true);\n        answerField.clear();\n        resultAlert.setText(\"\");\n        showAnswer.setText(\"\");\n    }\n\n    @FXML\n    void showNextCard(MouseEvent event) throws IOException {\n        if (currentIndex <= deck.getCards().getSize() - 1) {\n            currentIndex++;\n            if(currentIndex <= deck.getCards().getSize() - 1){\n                updateCard();\n            }\n        }\n        if (currentIndex == deck.getCards().getSize() -1) {\n            nextCard.setText(\"Show Result Deck\");\n\n        }\n        if(currentIndex == deck.getCards().getSize()){\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/project/flashcardapp/result_test_mode.fxml\"));\n            Parent addCardSceneRoot = loader.load();\n            Scene addCardScene = new Scene(addCardSceneRoot);\n            Stage stage = new Stage();\n            //stage.setTitle(\"RESULT DECK\");\n            stage.setScene(addCardScene);\n            stage.show();\n        }\n    }\n\n    @FXML\n    void showPreviousCard(MouseEvent event) {\n        if (currentIndex > 0) {\n            currentIndex--;\n            updateCard();\n        }\n    }\n    public void checkAnswer(ActionEvent event){\n        String as = answerField.getText();\n        if (as.equals(deck.getCards().getCard(currentIndex).getAnswer())) {\n            resultAlert.setText(\"CORRECT\");\n            resultAlert.setVisible(true);\n        }else{\n            resultAlert.setText(\"WRONG\");\n            resultAlert.setVisible(true);\n        }\n    }\n\n    public void showAnswer(MouseEvent event){\n        showAnswer.setText(deck.getCards().getCard(currentIndex).getAnswer());\n    }\n\n\n    public void backToDeckInfoWindow(MouseEvent mouseEvent) throws IOException {\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\n        alert.setTitle(\"Confirm Cancel\");\n        alert.setHeaderText(\"Do you want to exit?\");\n        alert.setContentText(\"Click OK to confirm, or Cancel to continue.\");\n\n        Optional<ButtonType> result = alert.showAndWait();\n        if (result.isPresent() && result.get() == ButtonType.OK) {\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/project/flashcardapp/deckinfo.fxml\"));\n            Parent detailSceneRoot = loader.load();\n            Scene detailScene = new Scene(detailSceneRoot);\n            Stage stage = (Stage)answerField.getScene().getWindow();\n            stage.setResizable(false);\n            stage.setTitle(deck.getDeckName());\n            stage.setScene(detailScene);\n            stage.show();\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/project/flashcardapp/Controller/LearningMode/TestModeController.java b/src/main/java/project/flashcardapp/Controller/LearningMode/TestModeController.java
--- a/src/main/java/project/flashcardapp/Controller/LearningMode/TestModeController.java	(revision ca8988938396782bd82f0001e5468f3517f6df19)
+++ b/src/main/java/project/flashcardapp/Controller/LearningMode/TestModeController.java	(date 1717250947225)
@@ -85,7 +85,8 @@
             FXMLLoader loader = new FXMLLoader(getClass().getResource("/project/flashcardapp/result_test_mode.fxml"));
             Parent addCardSceneRoot = loader.load();
             Scene addCardScene = new Scene(addCardSceneRoot);
-            Stage stage = new Stage();
+            Stage stage = (Stage) answerField.getScene().getWindow();
+            stage.setResizable(false);
             //stage.setTitle("RESULT DECK");
             stage.setScene(addCardScene);
             stage.show();
Index: decks.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[\n  {\n    \"deckName\": \"Deck2\",\n    \"cards\": {\n      \"cards\": [\n        {\n          \"question\": \"a\",\n          \"answer\": \"b\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 2, 2024, 6:17:35 PM\",\n            \"answerType\": \"MEDIUM\",\n            \"cycle\": 4\n          }\n        },\n        {\n          \"question\": \"sleep\",\n          \"answer\": \"ngủ\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 2, 2024, 6:17:35 PM\",\n            \"answerType\": \"MEDIUM\",\n            \"cycle\": 5\n          }\n        },\n        {\n          \"question\": \"eat\",\n          \"answer\": \"ăn\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 3, 2024, 6:13:45 PM\",\n            \"answerType\": \"CORRECT\",\n            \"cycle\": 4\n          }\n        }\n      ]\n    },\n    \"newCards\": 0,\n    \"learnedCards\": 3,\n    \"dueCards\": 0,\n    \"easyCard\": 3,\n    \"mediumCard\": 2,\n    \"hardCard\": 1\n  },\n  {\n    \"deckName\": \"Deck1\",\n    \"cards\": {\n      \"cards\": [\n        {\n          \"question\": \"1\",\n          \"answer\": \"2\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 1, 2024, 5:17:06 PM\",\n            \"answerType\": \"FAILURE\",\n            \"cycle\": 1\n          }\n        },\n        {\n          \"question\": \"study\",\n          \"answer\": \"học\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 1, 2024, 5:17:08 PM\",\n            \"answerType\": \"FAILURE\",\n            \"cycle\": 2\n          }\n        },\n        {\n          \"question\": \"bye\",\n          \"answer\": \"tạm biệt\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 1, 2024, 5:17:07 PM\",\n            \"answerType\": \"FAILURE\",\n            \"cycle\": 2\n          }\n        },\n        {\n          \"question\": \"12356789\",\n          \"answer\": \"23456891\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 1, 2024, 5:17:07 PM\",\n            \"answerType\": \"FAILURE\",\n            \"cycle\": 2\n          }\n        },\n        {\n          \"question\": \"hello\",\n          \"answer\": \"pằng pằng\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 2, 2024, 4:54:29 PM\",\n            \"answerType\": \"CORRECT\",\n            \"cycle\": 1\n          }\n        }\n      ]\n    },\n    \"newCards\": 0,\n    \"learnedCards\": 1,\n    \"dueCards\": 4,\n    \"easyCard\": 3,\n    \"mediumCard\": 2,\n    \"hardCard\": 1\n  },\n  {\n    \"deckName\": \"Deck3\",\n    \"cards\": {\n      \"cards\": [\n        {\n          \"question\": \"eat\",\n          \"answer\": \"ăn\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 2, 2024, 11:47:59 AM\",\n            \"answerType\": \"MEDIUM\",\n            \"cycle\": 1\n          }\n        },\n        {\n          \"question\": \"sleep\",\n          \"answer\": \"ngủ\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 2, 2024, 11:47:58 AM\",\n            \"answerType\": \"MEDIUM\",\n            \"cycle\": 1\n          }\n        }\n      ]\n    },\n    \"newCards\": 0,\n    \"learnedCards\": 2,\n    \"dueCards\": 0,\n    \"easyCard\": 3,\n    \"mediumCard\": 2,\n    \"hardCard\": 1\n  },\n  {\n    \"deckName\": \"Deck11\",\n    \"labelDescription\": \"\",\n    \"cards\": {\n      \"cards\": [\n        {\n          \"question\": \"confidential\",\n          \"answer\": \"Bí mật\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 1, 2024, 11:57:32 AM\",\n            \"answerType\": \"FAILURE\",\n            \"cycle\": 1\n          }\n        },\n        {\n          \"question\": \"bread\",\n          \"answer\": \"bánh mì\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 1, 2024, 11:57:31 AM\",\n            \"answerType\": \"FAILURE\",\n            \"cycle\": 1\n          }\n        }\n      ]\n    },\n    \"newCards\": 0,\n    \"learnedCards\": 0,\n    \"dueCards\": 2,\n    \"easyCard\": 3,\n    \"mediumCard\": 2,\n    \"hardCard\": 1\n  },\n  {\n    \"deckName\": \"test\",\n    \"labelDescription\": \"\",\n    \"cards\": {\n      \"cards\": [\n        {\n          \"question\": \"study\",\n          \"answer\": \"học\",\n          \"selector\": {\n            \"deadlineAt\": \"Jun 2, 2024, 5:44:02 PM\",\n            \"answerType\": \"MEDIUM\",\n            \"cycle\": 1\n          }\n        }\n      ]\n    },\n    \"newCards\": 0,\n    \"learnedCards\": 1,\n    \"dueCards\": 0,\n    \"easyCard\": 3,\n    \"mediumCard\": 2,\n    \"hardCard\": 1\n  }\n]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/decks.json b/decks.json
--- a/decks.json	(revision ca8988938396782bd82f0001e5468f3517f6df19)
+++ b/decks.json	(date 1717250947223)
@@ -159,28 +159,5 @@
     "easyCard": 3,
     "mediumCard": 2,
     "hardCard": 1
-  },
-  {
-    "deckName": "test",
-    "labelDescription": "",
-    "cards": {
-      "cards": [
-        {
-          "question": "study",
-          "answer": "học",
-          "selector": {
-            "deadlineAt": "Jun 2, 2024, 5:44:02 PM",
-            "answerType": "MEDIUM",
-            "cycle": 1
-          }
-        }
-      ]
-    },
-    "newCards": 0,
-    "learnedCards": 1,
-    "dueCards": 0,
-    "easyCard": 3,
-    "mediumCard": 2,
-    "hardCard": 1
   }
 ]
\ No newline at end of file
